@.str_int = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str_float = private unnamed_addr constant [7 x i8] c"%.08f\0A\00", align 1
@.str_string = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.false = private unnamed_addr constant [7 x i8] c"false\0A\00", align 1
@.true = private unnamed_addr constant [6 x i8] c"true\0A\00", align 1
@program.args = global i8** null
declare i32 @atoi(i8*)
declare i32 @printf(i8*, ...)
define void @main(i32 %local_nargs, i8** %local_args) {
store i8** %local_args, i8*** @program.args
%1 = add i32 1, 0
%2 = add i32 2, 0
%3 = add i32 %1, %2
%4 = add i32 3, 0
%5 = add i32 %3, %4
call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str_int, i64 0, i64 0), i32 %5)
ret void
}
